#
# BEC-GP-OMP codes are developed and (c)opyright-ed by:
#
# Luis E. Young-S., Sadhan K. Adhikari
# (UNESP - Sao Paulo State University, Brazil)
#
# Paulsamy Muruganandam
# (Bharathidasan University, Tamil Nadu, India)
#
# Dusan Vudragovic, Antun Balaz
# (Scientific Computing Laboratory, Institute of Physics Belgrade, Serbia)
#
# Public use and modification of this code are allowed provided that the
# following three papers are cited:
#
# [1] L. E. Young-S. et al., Comput. Phys. Commun. 204 (2016) 209.
# [2] P. Muruganandam, S. K. Adhikari, Comput. Phys. Commun. 180 (2009) 1888.
# [3] D. Vudragovic et al., Comput. Phys. Commun. 183 (2012) 2021.
#
# The authors would be grateful for all information and/or comments
# regarding the use of the code.
#

# Parameter input file for solving the time-independent Gross–Pitaevskii
# nonlinear partial differential equation in two-dimensional anisotropic
# trap by real time propagation using split-step Crank-Nicolson method.

#  Type of rescaling of Gross–Pitaevskii equation.
#  Possible values: 1 or 2.
#  Required: yes
#  Type: int
   OPTION = 2

#  Coefficient of the nonlinear term in the two-dimensional GP equation.
#  If not defined, G_2D is calculated as
#	G_2D = (4 * Pi * AS * NATOMS * a0) / (SQRT(2 * PI) * D_Z)
#  where AS is contact interaction strength, NATOMS number of atoms in condensate,
#  a0 Bohr radius and D_Z the axial gaussian width.
#  Required: no
#  Type: double
#   G_2D = 12.5484

#  Coefficient that multiplies nonlinear term in non-stationary problem during
#  NPAS and final NRUN iterations.
#  Required: yes
#  Type: double
   GPAR = 1.0

#  Number of atoms in condensate.
#  Required: yes
#  Type: long
   NATOMS = 120000

#  Unit of length. Required if G_3D is not defined.
#  Required: conditionally
#  Type: double
   AHO = 1.22823e-6

#  Contact interaction strength in units of Bohr radius.
#  Required if G_3D is not defined.
#  Required: conditionally
#  Type: double
   AS = 96.

#  Axial Gaussian Width = l/SQRT(LAMBDA)
#  Required: yes
#  Type: double
   D_Z = 0.3162

#  Number of discretization points in the x-direction.
#  Required: yes
#  Type: long
   NX = 256

#  Number of discretization points in the y-direction.
#  Required: yes
#  Type: long
   NY = 256

#  Spatial discretization step in the x-direction.
#  Required: yes
#  Type: double
   DX = 0.125

#  Spatial discretization step in the y-direction.
#  Required: yes
#  Type: double
   DY = 0.125

#  Time discretization step.
#  Required: yes
#  Type: double
   DT = 0.001

#  Gamma coefficient of anisotropy of the trap (omega_x / omega).
#  Required: yes
#  Type: double
   GAMMA = 1.

#  Nu coefficient of anisotropy of the trap (omega_y / omega).
#  Required: yes
#  Type: double
   NU = 1.

#  Oscillation amplitude of the scattering length (ac).
#  Required: yes
#  Type: double
   AMP = 0.05

#  Oscillation frequency of the scattering length (omg).
#  Required: yes
#  Type: double
   FREQ = 2.0

#  Number of subsequent iterations with fixed nonlinearity G0.
#  Required: yes
#  Type: long
   NPAS = 10000

#  Number of final iterations with fixed oscillating nonlinearity G.
#  Required: yes
#  Type: long
   NRUN = 0

#  Number of iterations with fixed nonlinearity G0 after oscillation.
#  Required: yes
#  Type: long
   NSTP = 0

#  Output file with the summary of final values of all physical quantities.
#  If not defined, standard output will be used.
#  Required: no
#  Type: string
   OUTPUT = real2d-out

#  Output file with RMS values. The values are written after initialization,
#  subsequent NSTP, NPAS, and final NRUN iterations.
#  Required: no
#  Type: string
   RMSOUT = real2d-rms

#  Output file with RMS values during the time evolution. The values
#  are written in subsequent NPAS and final NRUN iterations.
#  Required: no
#  Type: string
   DYNAOUT = real2d-dyn

#  Output file with the initial wave function. The 1D sections along coordinate
#  axes of the wave function are saved, which is designated by a suffix x or y.
#  If not defined, the initial wave function will not be saved.
#  Required: no
#  Type: string
   INITOUT = real2d-den-init

#  Output file with the wave function obtained after the first NSTP iterations,
#  which introduce nonlinearity G0.
#  If not defined, the wave function will not be saved.
#  Required: no
#  Type: string
#   NSTPOUT = real2d-den-nstp

#  Output file with the wave function obtained after the subsequent NPAS
#  iterations, with the fixed nonlinearity G0. If not defined, the wave function
#  Required: no
#  Type: string
   NPASOUT = real2d-den-npas

#  Output file with the final wave function obtained after the final NRUN
#  iterations. If not defined, the wave function will not be saved.
#  Required: no
#  Type: string
   NRUNOUT = real2d-den-nrun

#  Output file with the wave function obtained during iterations.
#  Required: no
#  Type: string
   TEMPOUT = real2d-den

#  Output file with the momentum space wave function during iterations.
#  Required: no
#  Type: string
#   TEMPMOM = real2d-mom

#  Discretization step in the x-direction used to save wave functions. Required
#  if any of wave function output files (INITOUT, NSTPOUT, NPASOUT, NRUNOUT) is
#  defined.
#  Required: conditionally
#  Type: long
   OUTSTPX = 1

#  Discretization step in the y-direction used to save wave functions. Required
#  if any of wave function output files (INITOUT, NSTPOUT, NPASOUT, NRUNOUT) is
#  defined.
#  Required: conditionally
#  Type: long
   OUTSTPY = 1

#  Time discretization step used to save wave functions. Required if any of wave
#  function output files (INITOUT, NSTPOUT, NPASOUT, NRUNOUT) is defined.
#  Required: conditionally
#  Type: long
   OUTDENSTP = 1000

#  Time discretization step used to save RMS of the wave function.
#  Required if DYNAOUT is defined.
#  Required: conditionally
#  Type: long
   OUTSTPT = 50
